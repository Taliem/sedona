/*! normalize-scss | MIT/GPLv2 License | bit.ly/normalize-scss */
/* Document
       ========================================================================== */
/**
     * 1. Correct the line height in all browsers.
     * 2. Prevent adjustments of font size after orientation changes in
     *    IE on Windows Phone and in iOS.
     */
html {
  line-height: 1.15;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
       ========================================================================== */
/**
     * Remove the margin in all browsers (opinionated).
     */
body {
  margin: 0; }

/**
     * Add the correct display in IE 9-.
     */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
     * Correct the font size and margin on `h1` elements within `section` and
     * `article` contexts in Chrome, Firefox, and Safari.
     */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
figcaption,
figure {
  display: block; }

/**
     * Add the correct margin in IE 8.
     */
figure {
  margin: 1em 40px; }

/**
     * 1. Add the correct box sizing in Firefox.
     * 2. Show the overflow in Edge and IE.
     */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
     * Add the correct display in IE.
     */
main {
  display: block; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Links
       ========================================================================== */
/**
     * 1. Remove the gray background on active links in IE 10.
     * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
     */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/* Text-level semantics
       ========================================================================== */
/**
     * 1. Remove the bottom border in Chrome 57- and Firefox 39-.
     * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
     */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
  /* 2 */ }

/**
     * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
     */
b,
strong {
  font-weight: inherit; }

/**
     * Add the correct font weight in Chrome, Edge, and Safari.
     */
b,
strong {
  font-weight: bolder; }

/**
     * 1. Correct the inheritance and scaling of font size in all browsers.
     * 2. Correct the odd `em` font sizing in all browsers.
     */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
     * Add the correct font style in Android 4.3-.
     */
dfn {
  font-style: italic; }

/**
     * Add the correct background and color in IE 9-.
     */
mark {
  background-color: #ff0;
  color: #000; }

/**
     * Add the correct font size in all browsers.
     */
small {
  font-size: 80%; }

/**
     * Prevent `sub` and `sup` elements from affecting the line height in
     * all browsers.
     */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
audio,
video {
  display: inline-block; }

/**
     * Add the correct display in iOS 4-7.
     */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
     * Remove the border on images inside links in IE 10-.
     */
img {
  border-style: none; }

/**
     * Hide the overflow in IE.
     */
svg:not(:root) {
  overflow: hidden; }

/* Forms
       ========================================================================== */
/**
     * 1. Change the font styles in all browsers (opinionated).
     * 2. Remove the margin in Firefox and Safari.
     */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
     * Show the overflow in IE.
     */
button {
  overflow: visible; }

/**
     * Remove the inheritance of text transform in Edge, Firefox, and IE.
     * 1. Remove the inheritance of text transform in Firefox.
     */
button,
select {
  /* 1 */
  text-transform: none; }

/**
     * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
     *    controls in Android 4.
     * 2. Correct the inability to style clickable types in iOS and Safari.
     */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

button,
[type="button"],
[type="reset"],
[type="submit"] {
  /**
       * Remove the inner border and padding in Firefox.
       */
  /**
       * Restore the focus styles unset by the previous rule.
       */ }
  button::-moz-focus-inner,
  [type="button"]::-moz-focus-inner,
  [type="reset"]::-moz-focus-inner,
  [type="submit"]::-moz-focus-inner {
    border-style: none;
    padding: 0; }
  button:-moz-focusring,
  [type="button"]:-moz-focusring,
  [type="reset"]:-moz-focusring,
  [type="submit"]:-moz-focusring {
    outline: 1px dotted ButtonText; }

/**
     * Show the overflow in Edge.
     */
input {
  overflow: visible; }

/**
     * 1. Add the correct box sizing in IE 10-.
     * 2. Remove the padding in IE 10-.
     */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
     * Correct the cursor style of increment and decrement buttons in Chrome.
     */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
     * 1. Correct the odd appearance in Chrome and Safari.
     * 2. Correct the outline style in Safari.
     */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
  /**
       * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
       */ }
  [type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }

/**
     * 1. Correct the inability to style clickable types in iOS and Safari.
     * 2. Change font properties to `inherit` in Safari.
     */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/**
     * Correct the padding in Firefox.
     */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
     * 1. Correct the text wrapping in Edge and IE.
     * 2. Correct the color inheritance from `fieldset` elements in IE.
     * 3. Remove the padding so developers are not caught out when they zero out
     *    `fieldset` elements in all browsers.
     */
legend {
  box-sizing: border-box;
  /* 1 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  color: inherit;
  /* 2 */
  white-space: normal;
  /* 1 */ }

/**
     * 1. Add the correct display in IE 9-.
     * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
     */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
     * Remove the default vertical scrollbar in IE.
     */
textarea {
  overflow: auto; }

/* Interactive
       ========================================================================== */
/*
     * Add the correct display in Edge, IE, and Firefox.
     */
details {
  display: block; }

/*
     * Add the correct display in all browsers.
     */
summary {
  display: list-item; }

/*
     * Add the correct display in IE 9-.
     */
menu {
  display: block; }

/* Scripting
       ========================================================================== */
/**
     * Add the correct display in IE 9-.
     */
canvas {
  display: inline-block; }

/**
     * Add the correct display in IE.
     */
template {
  display: none; }

/* Hidden
       ========================================================================== */
/**
     * Add the correct display in IE 10-.
     */
[hidden] {
  display: none; }

html {
  font-size: 14px;
  background: #f2f2f2; }

body {
  min-width: 320px;
  max-width: 1200px;
  margin: 0 auto;
  background: #ffffff;
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2); }

.btn {
  border: none;
  text-transform: uppercase; }

.navbar {
  display: flex;
  justify-content: flex-end;
  position: relative;
  background: #ffffff; }

.navbar__logo {
  width: 102px;
  height: 82px;
  background: url(../img/logo.svg) no-repeat;
  position: absolute;
  right: 50%;
  top: 0;
  margin-right: -51px;
  font-size: 0;
  z-index: 10; }
  @media screen and (min-width: 48em) {
    .navbar__logo {
      z-index: 30; } }
  @media screen and (min-width: 75em) {
    .navbar__logo {
      width: 187px;
      height: 96px;
      margin-right: -93.5px; } }

.navbar__menu-btn {
  padding: 18px 20px;
  z-index: 100; }
  @media screen and (min-width: 48em) {
    .navbar__menu-btn {
      display: none; } }

.menu-btn {
  cursor: pointer;
  width: 22px;
  height: 22px; }

.navbar__menu-list {
  position: absolute;
  top: 0%;
  left: 0%;
  width: 100%;
  z-index: 20; }
  @media screen and (min-width: 48em) {
    .navbar__menu-list {
      position: static; } }

.menu-list {
  background: #81b3d2;
  display: none;
  opacity: 0;
  transition: visibility 0.3s, opacity 0.3s ease-out; }
  @media screen and (min-width: 48em) {
    .menu-list {
      visibility: visible;
      opacity: 1;
      transition: none;
      display: flex;
      justify-content: space-between;
      background: #ffffff; } }

.menu-list--show {
  display: block;
  opacity: 1;
  transition: opacity 0.3s ease-in; }

.menu-list__link {
  display: inline-block;
  width: 100%;
  padding: 22px 0;
  border-bottom: 1px solid rgba(1, 1, 1, 0.2);
  box-shadow: inset 0px -1px 0px 0px rgba(255, 255, 255, 0.2);
  color: #ffffff;
  text-align: center;
  text-transform: uppercase;
  text-decoration: none;
  font-family: "PT Sans", Arial, sans-serif;
  font-size: 1.28571rem;
  font-weight: 700; }
  .menu-list__link:hover {
    background: #669ec0; }
  .menu-list__link:active {
    background: #5496bd;
    color: rgba(255, 255, 255, 0.3); }
  @media screen and (min-width: 48em) {
    .menu-list__link {
      border: none;
      box-shadow: none;
      color: #000000; }
      .menu-list__link:hover {
        color: #81b3d2;
        background: none; }
      .menu-list__link:active {
        color: rgba(0, 0, 0, 0.3);
        background: none; } }

.menu-list__right .menu-list__entry:last-of-type {
  border: none;
  box-shadow: none; }

@media screen and (min-width: 48em) {
  .menu-list__left, .menu-list__right {
    display: flex;
    width: 40%;
    justify-content: space-around; } }

.active-page {
  color: #766357; }
  .active-page:hover {
    color: #604e43; }
  .active-page:active {
    color: #766357;
    opacity: 0.3; }

.banner {
  position: relative;
  text-align: center;
  background: url(../img/back-mobile.jpg) center/cover no-repeat; }
  @media screen and (min-device-pixel-ratio: 2), (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
    .banner {
      background-image: url(../img/back-mobile.jpg@2x.jpg); } }
  @media screen and (min-width: 48em) {
    .banner {
      background-image: url(../img/back-tablet.jpg); } }
  @media screen and (min-width: 48em) and (min-device-pixel-ratio: 2), screen and (min-width: 48em) and (-webkit-min-device-pixel-ratio: 2), screen and (min-width: 48em) and (min-resolution: 192dpi) {
    .banner {
      background-image: url(../img/back-tablet.jpg@2x.jpg); } }
  @media screen and (min-width: 75em) {
    .banner {
      background-image: url(../img/back-desktop.jpg); } }
  @media screen and (min-width: 75em) and (min-device-pixel-ratio: 2), screen and (min-width: 75em) and (-webkit-min-device-pixel-ratio: 2), screen and (min-width: 75em) and (min-resolution: 192dpi) {
    .banner {
      background-image: url(../img/back-desktop.jpg@2x.jpg); } }

.banner::after {
  position: absolute;
  bottom: 0%;
  left: 0%;
  width: 100%;
  height: 57px;
  content: "";
  background: url(../img/intro-triangle.svg) center/cover no-repeat; }

.banner__img {
  width: 100%;
  box-sizing: border-box;
  margin: 90px auto; }
  @media screen and (max-width: 48em) {
    .banner__img {
      padding-left: 1.42857rem;
      padding-right: 1.42857rem; } }
  @media screen and (min-width: 48em) {
    .banner__img {
      width: auto; } }

.about__header {
  text-align: center;
  background: #ffffff;
  text-transform: uppercase;
  padding: 55px 0;
  position: relative; }
  @media screen and (max-width: 48em) {
    .about__header {
      padding-left: 1.42857rem;
      padding-right: 1.42857rem; } }

.about__header::before {
  position: absolute;
  left: 0;
  bottom: 0;
  content: "";
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 57px 0 0 50vw;
  border-color: transparent transparent transparent #81b3d2; }

.about__header::after {
  position: absolute;
  right: 0;
  bottom: 0;
  content: "";
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 57px 50vw 0 0;
  border-color: transparent #81b3d2 transparent transparent; }

@media screen and (min-width: 48em) {
  .about__header::before,
  .about__header::after {
    visibility: hidden; } }

.about__title {
  margin: 0;
  font-family: "PT Sans", Arial, sans-serif;
  font-size: 1.28571rem;
  font-weight: 700; }
  @media screen and (min-width: 48em) {
    .about__title {
      font-size: 1.5rem; } }

.about__promo-text {
  margin: 40px 0 0;
  font-family: "PT Sans", Arial, sans-serif;
  font-size: 1rem;
  font-weight: 400; }

.about__footer {
  padding: 34px 0;
  background: #ffffff; }
  @media screen and (min-width: 48em) {
    .about__footer {
      padding: 58px 0; } }

.about__map {
  height: 350px;
  width: 100%; }

.reason {
  display: flex;
  flex-direction: column;
  text-transform: uppercase;
  font-family: "PT Sans", Arial, sans-serif;
  font-size: 1rem;
  font-weight: 400; }
  @media screen and (min-width: 48em) {
    .reason {
      height: 260px;
      flex-direction: row; } }

@media screen and (min-width: 48em) {
  .reason--reverse {
    flex-direction: row-reverse; } }

.reason__content {
  min-height: 200px;
  display: flex;
  background: #eeeeee;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center; }
  @media screen and (max-width: 48em) {
    .reason__content {
      padding-left: 1.42857rem;
      padding-right: 1.42857rem; } }
  @media screen and (min-width: 48em) {
    .reason__content {
      box-sizing: border-box;
      padding: 0 46px;
      width: 33%;
      flex-grow: 1; } }

.reason__content--blue {
  background: #81b3d2;
  color: #ffffff; }

.reason__title {
  margin: 0; }

.reason__line {
  position: relative;
  display: inline-block;
  margin: 20px 0;
  padding: 0 9px; }

.reason__number {
  position: relative;
  background: #eeeeee;
  padding: 0 6px;
  z-index: 10; }

.reason__content--blue .reason__number {
  background: #81b3d2; }

.reason__line::after {
  position: absolute;
  left: 0;
  top: 50%;
  width: 100%;
  content: "";
  border-top: 2px solid #000000; }

.reason__content--blue .reason__line::after {
  border-top-color: #ffffff; }

.reason__text {
  margin: 0; }

.reason__crop {
  overflow: hidden;
  width: 100%;
  position: relative; }

@media screen and (min-width: 48em) {
  .reason__picture {
    position: absolute;
    top: 50%;
    left: 50%;
    height: auto;
    width: 100%;
    transform: translate(-50%, -50%); } }

.reason__img {
  width: 100%; }

.offer {
  font-family: "PT Sans", Arial, sans-serif;
  font-size: 1rem;
  font-weight: 400;
  text-align: center;
  text-transform: uppercase;
  padding-top: 26px;
  padding-bottom: 26px;
  display: flex;
  flex-wrap: wrap;
  align-items: center; }
  @media screen and (max-width: 48em) {
    .offer {
      padding-left: 1.42857rem;
      padding-right: 1.42857rem; } }
  @media screen and (min-width: 48em) {
    .offer {
      flex-direction: column;
      flex-wrap: nowrap;
      padding: 65px 50px; } }

.offers-wrap {
  display: flex;
  flex-direction: column; }
  @media screen and (min-width: 48em) {
    .offers-wrap {
      flex-direction: row;
      justify-content: center; } }

.offer__title {
  margin: 0;
  margin-left: 12px; }
  @media screen and (min-width: 48em) {
    .offer__title {
      margin: 30px 0; } }

.offer__text {
  flex-basis: 100%;
  margin-top: 26px;
  margin-bottom: 0; }
  @media screen and (min-width: 48em) {
    .offer__text {
      margin-top: 0; } }

@media screen and (min-width: 48em) {
  .offer__icon {
    flex-basis: 100%; } }

.interest {
  padding-bottom: 50px;
  text-align: center;
  text-transform: uppercase;
  font-family: "PT Sans", Arial, sans-serif;
  font-size: 1rem;
  font-weight: 400; }
  @media screen and (max-width: 48em) {
    .interest {
      padding-left: 1.42857rem;
      padding-right: 1.42857rem; } }

.interest__title {
  margin: 0; }
  @media screen and (min-width: 48em) {
    .interest__title {
      font-size: 2.14286rem; } }

.interest__text {
  margin: 40px 0; }

.interest__btn {
  font-family: "PT Sans", Arial, sans-serif;
  font-size: 1.5rem;
  font-weight: 700;
  padding: 1em 2.2381em;
  background: #81b3d2;
  color: #ffffff;
  cursor: pointer; }
  .interest__btn:hover {
    background: #669ec0; }
  .interest__btn:active {
    background: #5496bd;
    color: rgba(255, 255, 255, 0.3); }

.interest__btn--disable {
  background: #e5e5e5;
  cursor: not-allowed; }

.footer {
  padding-bottom: 20px;
  text-align: center; }
  @media screen and (min-width: 48em) {
    .footer {
      display: flex;
      justify-content: space-around;
      align-items: center; } }

.footer__hashtag {
  font-family: "PT Sans", Arial, sans-serif;
  font-size: 1.5rem;
  font-weight: 700;
  text-transform: uppercase;
  color: #000000;
  text-decoration: none; }

.footer__social-wrap {
  padding: 50px 0;
  font-size: 0; }
  @media screen and (min-width: 48em) {
    .footer__social-wrap {
      padding: 0; } }

.social-link {
  display: inline-block;
  background: #81b3d2;
  font-size: 0; }
  .social-link:hover {
    background: #669ec0; }
  .social-link:active {
    background: #5496bd; }

.social-link:nth-of-type(2) {
  margin: 0 6px; }

.social-link__svg {
  padding: 15px 13px;
  display: inline-block; }

.social-link:hover .social-link__svg-style {
  opacity: 0.3; }

.footer__developer {
  display: flex;
  align-items: center;
  justify-content: center;
  font-family: "PT Sans", Arial, sans-serif;
  font-size: 14px;
  font-weight: 400;
  text-decoration: none;
  text-transform: uppercase;
  color: #000000; }

.footer__dev-svg {
  margin-left: 12px; }

.footer__developer:hover .footer__dev-svg {
  fill: #81b3d2; }

.footer__developer:active .footer__dev-svg {
  opacity: 0.3; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
